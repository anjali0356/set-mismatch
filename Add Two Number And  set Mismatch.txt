class Solution {
   
Add Two Number
 public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummyHead = new ListNode(0);
         ListNode curr = dummyHead;
         int carry=0;
         while(l1!=null || l2!=null || carry!=0){
             int x=(l1!=null)? l1.val:0;
              int y=(l2!=null)? l2.val:0;
              int sum=carry + x + y;
              carry=sum/10;
              curr.next=new ListNode(sum % 10);
              curr=curr.next;
              if(l1!=null)
              l1=l1.next;
              if(l2!=null)
              l2=l2.next;
             }
             return dummyHead.next;
    }
}


Set Mismatch
class Solution {
    public int[] findErrorNums(int[] nums) {
         int n = nums.length;
         int i = 0;
         int mis = 0;
         int dub = 0;
         int res[] = new int[2];
         while (i < n) {
            if (nums[i] != nums[nums[i] - 1]) {
                int temp = nums[i];
â€¦                    res[1] = i + 1;
           }
        }
           return res;
    }
}